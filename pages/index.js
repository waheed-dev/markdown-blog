import fs from 'fs'
import path from 'path'
import Head from "next/head";
import styles from "../styles/Home.module.css";
import {Box, SimpleGrid} from "@chakra-ui/react";
import Header from "../components/header/Header";
import Footer from "../components/Footer";
import matter from "gray-matter";
import {sortByDate} from "../Helpers";
import PostCard from "../components/PostCard";
import PortBlogCard from "../components/PortBlogCard";
import PortCta from "../components/PortCta";
import SelfInfo from "../components/SelfInfo";
import Projects from "../components/Projects/Projects";
import Skills from "../components/skills/Skills";

export default function Home({posts}) {
  return (
    <div>
      <Head>
        <title>WebMentor</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box>
          <Box paddingX={['6','10','50','160']} mt={['6','8','10','10']}>
        <Header />

          <PortCta/>
                {posts.map((post) => (
                    <PortBlogCard
                        title={post.postData.title}
                        date={post.postData.date}
                        author={post.postData.author}
                        coverImg={post.postData.cover_image}
                        category={post.postData.category}
                        excerpt={post.postData.excerpt}
                        slug={post.slug}
                    />
                ))}
            <SelfInfo/>
            <Projects/>
            <Skills/>
          <Footer/>
        </Box>

        </Box>
    </div>
  );
}

export async function getStaticProps() {
    const files = fs.readdirSync(path.join("posts"));
    const posts = files.map((post) => {
        const slug = post.replace(".md", "");
        const markdownWithMatter = fs.readFileSync(
            path.join("posts", post),
            "utf-8"
        );
        const { data: postData } = matter(markdownWithMatter);
        return {
            slug,
            postData,
        };
    });
    return {
        props: {
            posts: posts.sort(sortByDate).slice(0, 1)
        },
    };
}
